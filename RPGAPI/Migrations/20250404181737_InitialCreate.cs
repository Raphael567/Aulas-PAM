using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace RPGAPI.Migrations
{
    /// <inheritdoc />
    public partial class InitialCreate : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "TB_USUARIOS",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 43, 254, 9, 14, 65, 166, 203, 147, 228, 181, 98, 255, 232, 237, 154, 172, 248, 126, 47, 143, 68, 193, 106, 149, 106, 88, 30, 88, 83, 29, 39, 141, 34, 1, 60, 140, 191, 245, 208, 139, 105, 191, 213, 211, 127, 96, 224, 146, 72, 233, 96, 133, 161, 22, 241, 31, 200, 15, 71, 185, 159, 204, 200, 178 }, new byte[] { 59, 148, 158, 199, 56, 16, 96, 190, 187, 74, 16, 121, 37, 49, 55, 128, 162, 11, 60, 40, 43, 205, 82, 213, 5, 206, 242, 70, 84, 28, 17, 144, 190, 203, 102, 51, 219, 189, 13, 241, 16, 212, 214, 202, 53, 46, 250, 25, 204, 35, 162, 50, 18, 174, 73, 78, 124, 173, 54, 247, 42, 96, 71, 52, 71, 50, 112, 183, 194, 83, 27, 121, 71, 221, 192, 199, 116, 10, 3, 63, 58, 157, 69, 83, 95, 70, 45, 48, 72, 44, 244, 13, 51, 107, 140, 34, 92, 181, 142, 82, 149, 79, 30, 188, 32, 136, 176, 174, 157, 145, 137, 234, 233, 241, 198, 127, 31, 118, 146, 89, 64, 230, 108, 208, 148, 67, 232, 245 } });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "TB_USUARIOS",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 36, 180, 177, 169, 28, 121, 179, 64, 199, 97, 17, 6, 182, 236, 152, 179, 106, 58, 44, 207, 255, 62, 220, 119, 141, 22, 234, 112, 101, 89, 120, 44, 148, 153, 46, 244, 221, 115, 217, 92, 171, 114, 156, 234, 110, 189, 234, 0, 45, 139, 249, 81, 50, 189, 117, 119, 59, 208, 174, 60, 175, 67, 119, 19 }, new byte[] { 214, 204, 172, 31, 187, 137, 35, 222, 128, 244, 205, 205, 215, 129, 195, 225, 250, 41, 31, 61, 102, 173, 66, 38, 121, 87, 83, 167, 63, 29, 24, 104, 203, 71, 230, 144, 182, 250, 67, 89, 159, 173, 37, 117, 145, 94, 239, 143, 8, 166, 88, 137, 94, 106, 80, 126, 208, 177, 205, 141, 86, 164, 109, 113, 115, 245, 1, 134, 181, 207, 3, 2, 217, 135, 45, 191, 48, 181, 138, 94, 12, 71, 128, 150, 15, 49, 184, 210, 109, 224, 177, 13, 138, 184, 76, 150, 71, 127, 235, 220, 204, 2, 56, 138, 5, 245, 114, 147, 146, 227, 18, 180, 162, 211, 121, 220, 212, 96, 106, 89, 155, 174, 15, 146, 250, 152, 64, 46 } });
        }
    }
}
